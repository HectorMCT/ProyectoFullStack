{"ast":null,"code":"import axios from \"axios\";\nimport { RENT_FAILURE, RENT_SUCCESS } from \"./RentsConst\";\n\nconst rentSuccess = rent => {\n  return {\n    type: RENT_SUCCESS,\n    payload: rent\n  };\n};\n\nconst rentFailure = error => {\n  return {\n    type: RENT_FAILURE,\n    payload: error\n  };\n};\n\nexport class RentService {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080/api/v1/rent\";\n  }\n\n  getRentEmail(email) {\n    return axios.get(this.baseUrl + \"?email=\" + email).then(res => console.log(res));\n  }\n\n  getRentId(id) {\n    return axios.get(this.baseUrl + \"/rented?id=\" + id).then(response => {\n      despatch(rentSuccess(response.data));\n    }).catch(error => {\n      dispatch(rentFailure(error));\n    });\n  }\n\n  postCustomer(customer) {\n    return axios.post(this.baseUrl + \"/create\", customer).then(res => res.data);\n  }\n\n}","map":{"version":3,"sources":["/home/hector/netcraker/rentcar/src/main/rentcartfront/src/service/RentService.js"],"names":["axios","RENT_FAILURE","RENT_SUCCESS","rentSuccess","rent","type","payload","rentFailure","error","RentService","baseUrl","getRentEmail","email","get","then","res","console","log","getRentId","id","response","despatch","data","catch","dispatch","postCustomer","customer","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,YAAtB,QAAyC,cAAzC;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAEH,YADH;AAEHI,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMG,WAAW,GAAIC,KAAD,IAAW;AAC3B,SAAO;AACHH,IAAAA,IAAI,EAAEJ,YADH;AAEHK,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,WAAN,CAAiB;AAAA;AAAA,SAEpBC,OAFoB,GAEV,mCAFU;AAAA;;AAIpBC,EAAAA,YAAY,CAACC,KAAD,EAAO;AAEf,WAAOZ,KAAK,CAACa,GAAN,CAAU,KAAKH,OAAL,GAAc,SAAd,GAAyBE,KAAnC,EAA0CE,IAA1C,CAA+CC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAtD,CAAP;AACH;;AAEDG,EAAAA,SAAS,CAACC,EAAD,EAAI;AAET,WAAOnB,KAAK,CAACa,GAAN,CAAU,KAAKH,OAAL,GAAe,aAAf,GAA+BS,EAAzC,EACFL,IADE,CACIM,QAAD,IAAc;AAChBC,MAAAA,QAAQ,CAAClB,WAAW,CAACiB,QAAQ,CAACE,IAAV,CAAZ,CAAR;AACH,KAHE,EAIFC,KAJE,CAIKf,KAAD,IAAW;AACdgB,MAAAA,QAAQ,CAACjB,WAAW,CAACC,KAAD,CAAZ,CAAR;AACH,KANE,CAAP;AAOH;;AAEDiB,EAAAA,YAAY,CAACC,QAAD,EAAU;AAClB,WAAO1B,KAAK,CAAC2B,IAAN,CAAW,KAAKjB,OAAL,GAAe,SAA1B,EAAqCgB,QAArC,EAA+CZ,IAA/C,CAAoDC,GAAG,IAAIA,GAAG,CAACO,IAA/D,CAAP;AACH;;AAtBmB","sourcesContent":["import axios from \"axios\";\nimport {RENT_FAILURE, RENT_SUCCESS} from \"./RentsConst\";\n\nconst rentSuccess = (rent) => {\n    return {\n        type: RENT_SUCCESS,\n        payload: rent,\n    };\n};\n\nconst rentFailure = (error) => {\n    return {\n        type: RENT_FAILURE,\n        payload: error,\n    };\n};\n\nexport class RentService{\n\n    baseUrl = \"http://localhost:8080/api/v1/rent\"\n\n    getRentEmail(email){\n\n        return axios.get(this.baseUrl +\"?email=\"+ email).then(res => console.log(res));\n    }\n\n    getRentId(id){\n\n        return axios.get(this.baseUrl + \"/rented?id=\" + id)\n            .then((response) => {\n                despatch(rentSuccess(response.data))\n            })\n            .catch((error) => {\n                dispatch(rentFailure(error));\n            });\n    }\n\n    postCustomer(customer){\n        return axios.post(this.baseUrl + \"/create\", customer).then(res => res.data);\n    }\n}"]},"metadata":{},"sourceType":"module"}