{"ast":null,"code":"import axios from \"axios\";\nexport class CarService {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080/api/v1/cars\";\n  }\n\n  getAvailable(start, end) {\n    console.log(start);\n    console.log(end);\n    return axios.get(this.baseUrl + \"?start=\" + start + \"&end=\" + end).then(res => res.data);\n  }\n\n  getCategory() {\n    return axios.get(this.baseUrl + \"/category\").then(res => res.data);\n  }\n\n  getColors() {\n    return axios.get(this.baseUrl + \"/colors\").then(res => res.data);\n  }\n\n  getCarsY() {\n    return axios.get(this.baseUrl + \"/year\").then(res => res.data);\n  }\n\n  getModels() {\n    return axios.get(this.baseUrl + \"/model\").then(res => res.data);\n  }\n\n  getMakers() {\n    return axios.get(this.baseUrl + \"/maker\").then(res => res.data);\n  }\n\n  getByFilters(category, color, year, model, makec) {\n    let order = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'DESC';\n    let start = arguments.length > 6 ? arguments[6] : undefined;\n    let end = arguments.length > 7 ? arguments[7] : undefined;\n    return axios.get(this.baseUrl + \"/filters\" + \"?categoriaf=\" + category + \"&colorf=\" + color + \"&yearf=\" + year + \"&modelf=\" + model + \"&makef=\" + makec + \"&ordderf=\" + order + \"&startDate=\" + start + \"&endDate=\" + end).then(res => res.data);\n  }\n\n}","map":{"version":3,"sources":["/home/hector/netcraker/rentcar/src/main/rentcartfront/src/service/CarService.js"],"names":["axios","CarService","baseUrl","getAvailable","start","end","console","log","get","then","res","data","getCategory","getColors","getCarsY","getModels","getMakers","getByFilters","category","color","year","model","makec","order"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAN,CAAgB;AAAA;AAAA,SAEnBC,OAFmB,GAET,mCAFS;AAAA;;AAInBC,EAAAA,YAAY,CAACC,KAAD,EAAQC,GAAR,EAAY;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOL,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,SAAb,GAAuBE,KAAvB,GAA6B,OAA7B,GAAqCC,GAA/C,EAAoDI,IAApD,CAA0DC,GAAG,IAAIA,GAAG,CAACC,IAArE,CAAP;AACH;;AAEDC,EAAAA,WAAW,GAAE;AACT,WAAOZ,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,WAAvB,EAAoCO,IAApC,CAAyCC,GAAG,IAAIA,GAAG,CAACC,IAApD,CAAP;AACH;;AAEDE,EAAAA,SAAS,GAAE;AACP,WAAOb,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,SAAvB,EAAkCO,IAAlC,CAAuCC,GAAG,IAAIA,GAAG,CAACC,IAAlD,CAAP;AACH;;AAEDG,EAAAA,QAAQ,GAAE;AACN,WAAOd,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,OAAvB,EAAgCO,IAAhC,CAAqCC,GAAG,IAAIA,GAAG,CAACC,IAAhD,CAAP;AACH;;AAEDI,EAAAA,SAAS,GAAE;AACP,WAAOf,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,QAAvB,EAAiCO,IAAjC,CAAsCC,GAAG,IAAIA,GAAG,CAACC,IAAjD,CAAP;AACH;;AAEDK,EAAAA,SAAS,GAAE;AACP,WAAOhB,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,QAAvB,EAAiCO,IAAjC,CAAsCC,GAAG,IAAIA,GAAG,CAACC,IAAjD,CAAP;AACH;;AAEDM,EAAAA,YAAY,CAACC,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAiE;AAAA,QAA3BC,KAA2B,uEAAnB,MAAmB;AAAA,QAAXnB,KAAW;AAAA,QAAJC,GAAI;AAEzE,WAAOL,KAAK,CAACQ,GAAN,CAAU,KAAKN,OAAL,GAAa,UAAb,GAAwB,cAAxB,GAAuCgB,QAAvC,GAAgD,UAAhD,GAA2DC,KAA3D,GAAiE,SAAjE,GAA2EC,IAA3E,GAAgF,UAAhF,GAA2FC,KAA3F,GAAiG,SAAjG,GAA2GC,KAA3G,GAAiH,WAAjH,GAA6HC,KAA7H,GAAmI,aAAnI,GAAiJnB,KAAjJ,GAAuJ,WAAvJ,GAAmKC,GAA7K,EAAkLI,IAAlL,CAAuLC,GAAG,IAAIA,GAAG,CAACC,IAAlM,CAAP;AACH;;AAjCkB","sourcesContent":["import axios from \"axios\";\n\nexport class CarService{\n\n    baseUrl = \"http://localhost:8080/api/v1/cars\"\n\n    getAvailable(start, end){\n        console.log(start)\n        console.log(end)\n        return axios.get(this.baseUrl+\"?start=\"+start+\"&end=\"+end).then( res => res.data);\n    }\n\n    getCategory(){\n        return axios.get(this.baseUrl+\"/category\").then(res => res.data);\n    }\n\n    getColors(){\n        return axios.get(this.baseUrl+\"/colors\").then(res => res.data);\n    }\n\n    getCarsY(){\n        return axios.get(this.baseUrl+\"/year\").then(res => res.data);\n    }\n\n    getModels(){\n        return axios.get(this.baseUrl+\"/model\").then(res => res.data);\n    }\n\n    getMakers(){\n        return axios.get(this.baseUrl+\"/maker\").then(res => res.data);\n    }\n\n    getByFilters(category, color, year, model, makec, order = 'DESC', start, end){\n\n        return axios.get(this.baseUrl+\"/filters\"+\"?categoriaf=\"+category+\"&colorf=\"+color+\"&yearf=\"+year+\"&modelf=\"+model+\"&makef=\"+makec+\"&ordderf=\"+order+\"&startDate=\"+start+\"&endDate=\"+end).then(res => res.data);\n    }\n}"]},"metadata":{},"sourceType":"module"}