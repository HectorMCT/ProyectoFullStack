{"ast":null,"code":"import axios from \"axios\";\nexport class RentService {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080/api/v1/rent\";\n  }\n\n  getRentEmail(email) {\n    console.log(email);\n    return axios.get(this.baseUrl + \"?email=\" + email).then(res => res.data);\n  }\n\n  getRentId(id) {\n    return axios.get(this.baseUrl + \"/rented?id=\" + id).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  postCustomer(customer) {\n    return axios.post(this.baseUrl + \"/create\", customer).then(res => res.data);\n  }\n\n}","map":{"version":3,"sources":["/home/hector/netcraker/rentcar/src/main/rentcartfront/src/service/RentService.js"],"names":["axios","RentService","baseUrl","getRentEmail","email","console","log","get","then","res","data","getRentId","id","response","error","postCustomer","customer","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAN,CAAiB;AAAA;AAAA,SAEpBC,OAFoB,GAEV,mCAFU;AAAA;;AAKpBC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOJ,KAAK,CAACO,GAAN,CAAU,KAAKL,OAAL,GAAc,SAAd,GAAyBE,KAAnC,EAA0CI,IAA1C,CAA+CC,GAAG,IAAIA,GAAG,CAACC,IAA1D,CAAP;AACH;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAI;AACT,WAAOZ,KAAK,CAACO,GAAN,CAAU,KAAKL,OAAL,GAAe,aAAf,GAA+BU,EAAzC,EAA6CJ,IAA7C,CAAmDK,QAAD,IAAc;AACnER,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,KAFM,EAEHC,KAAD,IAAW;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAJM,CAAP;AAKH;;AAEDC,EAAAA,YAAY,CAACC,QAAD,EAAU;AAClB,WAAOhB,KAAK,CAACiB,IAAN,CAAW,KAAKf,OAAL,GAAe,SAA1B,EAAqCc,QAArC,EAA+CR,IAA/C,CAAoDC,GAAG,IAAIA,GAAG,CAACC,IAA/D,CAAP;AACH;;AApBmB","sourcesContent":["import axios from \"axios\";\n\nexport class RentService{\n\n    baseUrl = \"http://localhost:8080/api/v1/rent\"\n\n\n    getRentEmail(email){\n        console.log(email);\n        return axios.get(this.baseUrl +\"?email=\"+ email).then(res => res.data);\n    }\n\n    getRentId(id){\n        return axios.get(this.baseUrl + \"/rented?id=\" + id).then((response) => {\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    postCustomer(customer){\n        return axios.post(this.baseUrl + \"/create\", customer).then(res => res.data);\n    }\n}"]},"metadata":{},"sourceType":"module"}